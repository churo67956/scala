* Scala
In a *restricted sense*, functional programming means programming
without mutable variables,assigments,loops and other imperative
control structures.

In a *wider sense*, FP means focusing on the functions to construct
elegant programms.

Functions can be values that are produced, consumed and composed.

In particular, functions in FP languages are first-class citizens.
** Some functional programming languages
In the wide sense :
1) Haskell
2) Scala

** Call by Name and call by value 

There are 2 evaluation strategies : 

1. Call by value has the advantage that it evaluates every
function argument only once.

2. Call by name has the advantage that a function argument
is not evaluated if the correspondient parameter is unused
in the evaluation of the function body.

If CBV evaluation of an expression e terminates, then CBN
evaluation of e terminates,too.

The other direction is not true.

By default Scala use call by value.But if a type of
parameters starts with => it uses call by name strategy.

* Books
Structure and interpretation of computer programs. Harold.
